local allowedUserIds = {
    4064084423, -- Your user ID
    4194975639,   -- Replace with other actual user IDs
    7391842480,
    34567890,
    45678901,
    00000000
}

local playerId = game.Players.LocalPlayer.UserId

-- Function to check if the player is allowed
local function isPlayerAllowed()
    for _, id in ipairs(allowedUserIds) do
        if id == playerId then
            return true
        end
    end
    return false
end

-- Check if the player is allowed to use the script
if not isPlayerAllowed() then
    print("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ") -- "You do not have permission to access this function"
    return
end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/lime"))()

local w = Library:Window("PNP_HUB V6.PRO")

w:Button("‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏ß‡∏≤‡∏õ", function()
    print("Printed")

    local mouse = game.Players.LocalPlayer:GetMouse()
    local tool = Instance.new("Tool")
    
    tool.RequiresHandle = false
    tool.Name = "‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏ß‡∏≤‡∏õ"
    
    tool.Activated:Connect(function()
        local pos = mouse.Hit + Vector3.new(0, 2.5, 0)
        pos = CFrame.new(pos.X, pos.Y, pos.Z)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
    end)
    
    tool.Parent = game.Players.LocalPlayer.Backpack
end)

local isAiming = false
local fov = 50
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Cam = game.Workspace.CurrentCamera

local FOVring = Drawing.new("Circle")
FOVring.Visible = false -- ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(128, 0, 128)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local function updateDrawings()
    local camViewportSize = Cam.ViewportSize
    FOVring.Position = camViewportSize / 2
end

local function onKeyDown(input)
    if input.KeyCode == Enum.KeyCode.Delete then
        RunService:UnbindFromRenderStep("FOVUpdate")
        FOVring:Remove()
        isAiming = false
    end
end

UserInputService.InputBegan:Connect(onKeyDown)

local function lookAt(target)
    local lookVector = (target - Cam.CFrame.Position).unit
    local newCFrame = CFrame.new(Cam.CFrame.Position, Cam.CFrame.Position + lookVector)
    Cam.CFrame = newCFrame
end

local function getClosestPlayerInFOV(trg_part)
    local nearest = nil
    local last = math.huge
    local playerMousePos = Cam.ViewportSize / 2

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            local part = player.Character and player.Character:FindFirstChild(trg_part)
            if part then
                local ePos, isVisible = Cam:WorldToViewportPoint(part.Position)
                local distance = (Vector2.new(ePos.x, ePos.y) - playerMousePos).Magnitude

                if distance < last and isVisible and distance < fov then
                    last = distance
                    nearest = player
                end
            end
        end
    end

    return nearest
end

w:Toggle("‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤", function(v)
    isAiming = v
    FOVring.Visible = false  -- ‡∏ã‡πà‡∏≠‡∏ô‡∏ß‡∏á FOV

    if v then
        RunService:BindToRenderStep("FOVUpdate", Enum.RenderPriority.Camera.Value, function()
            updateDrawings()  -- ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á FOVring ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á
            local closest = getClosestPlayerInFOV("Head")
            if closest and closest.Character:FindFirstChild("Head") then
                lookAt(closest.Character.Head.Position)
            end
        end)
    else
        RunService:UnbindFromRenderStep("FOVUpdate")
    end
end)

w:Toggle("‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß 50", function(v)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    if v then
        print("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        humanoid.WalkSpeed = 50  -- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ñ‡∏≤‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô 50
    else
        print("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        humanoid.WalkSpeed = 16  -- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ (16)
    end
end)

local fovConnection
w:Toggle("‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏Å‡∏ß‡πâ‡∏≤‡∏á", function(v)
    if v then
        print("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        
        local camera = workspace.CurrentCamera
        
        local function onRenderStep()
            camera.FieldOfView = 800
        end

        fovConnection = game:GetService("RunService").RenderStepped:Connect(onRenderStep)

    else
        print("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

        local camera = workspace.CurrentCamera
        camera.FieldOfView = 70

        if fovConnection then
            fovConnection:Disconnect()
            fovConnection = nil
        end
    end
end)

w:Toggle("‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î‡∏™‡∏π‡∏á‡πÑ‡∏°‡πà‡∏ö‡∏≠‡∏Å%ü§´", function(v)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    if v then
        print("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏µ‡πà ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        humanoid.JumpPower = humanoid.JumpPower * 2
    else
        print("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏µ‡πà ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        humanoid.JumpPower = humanoid.JumpPower / 2
    end
end)

local noclipConnection
w:Toggle("No Clip", function(v)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if v then
        print("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≤ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô - No Clip")

        noclipConnection = game:GetService("RunService").Stepped:Connect(function()
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end)

    else
        print("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≤ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô - No Clip")

        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end

        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and not part.CanCollide then
                part.CanCollide = true
            end
        end
    end
end)
